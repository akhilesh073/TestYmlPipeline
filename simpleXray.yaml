resources:
  - name: propertyCanvas
    type: PropertyBag
    configuration:
      key1: value1
      key2: value2
      pipelines: 'user_in'
pipelines:
  - name: varshabash
    steps:
      - name: testReport_u16
        type: Bash
        configuration:
          nodePool: ubuntu16
          inputResources:
            - name: script_repo1
          runtime:
            type: image
            image:
              # auto:
              #   language: java
              #   versions:
              #     - openjdk8
              custom:
                name: pipelines-docker.jfrog.io/jfrog/pipelines-u16go
                tag: 0.9.1 #master #
        execution:
          onExecute:
            - printenv
            - cd $res_script_repo1_resourcePath
            - python -m py_compile calc.py
            - sleep 20
            - pip install pytest
            - cd $res_script_repo1_resourcePath
            - py.test --verbose --junit-xml test-reports/results.xml test_calc.py
            - save_tests $res_script_repo1_resourcePath/test-reports/results.xml

  - name: varshamvn
    steps:
      - name: input_script_bash
        type: Bash
        configuration:
          nodePool: TestPoolAkhil
          runtime:
            type: image
            image:
              # auto:
              #   language: java
              #   versions:
              #     - openjdk8
              custom:
                name: pipelines-docker.jfrog.io/jfrog/pipelines-u16java
                tag: 0.9.1
        execution:
          onExecute:
            - printenv
            - echo $test
            - echo $ribbit
            - pushd $res_script_repo1_resourcePath
            - source example.env
            - echo ~
            - ./echo.sh
            - echo $test
            - echo $ribbit
            - popd

      - name: mvnBuild_sample
        type: MvnBuild
        configuration:
          nodePool: ubuntu16
          sourceLocation: ./artifactory-maven-plugin-example
          mvnCommand: clean install -f ./pom.xml
          configFileLocation: .
          configFileName: mvn-art-config
          inputResources:
            - name: mvn_repo1
          inputSteps:
            - name: input_script_bash
          integrations:
            - name: varsha_artifactory
            - name: varsha_slack
          runtime:
            type: image
            image:
              custom:
                name: drydock/u16java
                tag: master
        execution:
          onStart:
            ######## if jave image is not there then install java using following commands
            # - apt install default-jdk
            # - pushd /tmp
            # - wget http://mirrors.estointernet.in/apache/maven/maven-3/3.6.1/binaries/apache-maven-3.6.1-bin.tar.gz
            # - tar xzvf apache-maven-3.6.1-bin.tar.gz
            #  - export PATH=$PATH:/tmp/apache-maven-3.6.1/bin
            #  - export M2_HOME=/tmp/apache-maven-3.6.1/
            #  - popd
            ########## java installation done
            - javac -version
            - mvn --version
          onSuccess:
            - send_notification varsha_slack

      - name: mvn_build_scan
        type: XrayScan
        configuration:
          nodePool: TestPoolAkhil
          #waitUntilFinish: false
          inputResources:
            - name: mvnBuild_info
          outputResources:
            - name: mvnBuild_infoScaned

      - name: mvn_build_promote
        type: PromoteBuild
        configuration:
          nodePool: TestPoolAkhil
          targetRepository: test-maven-local # required
          includeDependencies: true # default false
          status: 'promote success' # for mvn_build_promoted" # optional
          comment: 'maven build should be promoted from varsha-local. maven build should be promoted from varsha-local. maven build should be promoted from varsha-local. maven build should be promoted from varsha-local' # for mvn_build_promoted" # optional
          copy: true #optional - no need to have delete access it wont delete from base repo just moves copy to target repo
          inputResources:
            - name: mvnBuild_info #required
          outputResources:
            - name: mvnBuild_infopromoted #required

      - name: mvn_release_bundle_unsigned
        type: CreateReleaseBundle
        configuration:
          nodePool: TestPoolAkhil
          dryRun: false
          description: 'This is to test mvn build'
          releaseBundleName: mvn_release_bundle_varsha
          releaseBundleVersion: v0.0.2
          sign: false
          inputResources:
            - name: mvnBuild_infopromoted
          outputResources:
            - name: unsigned_mvn_release_bundle

      - name: signed_release_mvn_bundle
        type: SignReleaseBundle
        configuration:
          nodePool: TestPoolAkhil
          inputResources:
            - name: unsigned_mvn_release_bundle
          outputResources:
            - name: signed_mvn_release_bundle

      - name: mvn_distribute_signed_release
        type: DistributeReleaseBundle
        configuration:
          nodePool: TestPoolAkhil
          inputResources:
            - name: signed_mvn_release_bundle
            - name: mvn_distribution_rule
